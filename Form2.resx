<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonClose.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>